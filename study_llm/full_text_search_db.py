'''
    Generated by ChatGPT 4o 2025-03-19.
'''

import sqlite3

class FullTextSearch:
    def __init__(self, db_name="fts_example.db"):
        self.conn = sqlite3.connect(db_name)
        self.cursor = self.conn.cursor()
        self.create_table()

    def create_table(self):
        # Create FTS5 virtual table with tokenization and prefix for partial matching
        self.cursor.execute("""
            CREATE VIRTUAL TABLE IF NOT EXISTS documents USING fts5(
                title, 
                body, 
                tokenize = 'porter unicode61', 
                prefix = '2 3'
            );
        """)
        self.conn.commit()

    def insert_document(self, title, body):
        self.cursor.execute("""
            INSERT INTO documents (title, body) VALUES (?, ?)
        """, (title, body))
        self.conn.commit()

    def search(self, query):
        # Use the rank function to order results by relevance
        self.cursor.execute(f"""
            SELECT title, body, rank
            FROM documents
            WHERE documents MATCH ?
            ORDER BY rank
        """, (query,))
        return self.cursor.fetchall()

    def delete_all(self):
        self.cursor.execute("DELETE FROM documents;")
        self.conn.commit()

    def close(self):
        self.conn.close()

if __name__ == "__main__":
    fts = FullTextSearch()

    # Sample data
    docs = [
        ("Python Programming", "Python is a popular programming language."),
        ("Machine Learning", "Machine learning is a field of artificial intelligence."),
        ("Artificial Intelligence", "AI is transforming industries with automation."),
        ("Natural Language Processing", "NLP enables computers to understand human language."),
        ("Data Science", "Data science involves analyzing large datasets.")
    ]

    # Insert sample data
    fts.delete_all()
    for title, body in docs:
        fts.insert_document(title, body)

    # Search query example
    print("\nSearch Results for 'python':")
    results = fts.search("python")
    for row in results:
        print(f"Title: {row[0]}\nBody: {row[1]}\nScore: {row[2]}\n")

    # Cleanup
    fts.close()
